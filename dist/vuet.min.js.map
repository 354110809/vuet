{"version":3,"file":"vuet.min.js","sources":["../src/install.js","../src/mapState.js","../src/mapMixins.js","../src/plugins/life.js","../src/plugins/local.js","../src/plugins/need.js","../src/plugins/once.js","../src/plugins/route.js","../src/utils.js","../src/debug.js","../src/vuet.js","../src/index.js"],"sourcesContent":["import Vuet from './vuet'\nimport plugins from './plugins/index'\n\nexport let _Vue = null\n\nconst isDef = v => v !== undefined\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (isDef(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.init(this)\n      }\n    },\n    destroyed () {\n      if (isDef(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n  Object.keys(plugins).forEach(k => {\n    Vuet.use(plugins[k])\n  })\n}\n","import utils from './utils'\n\nexport default function mapState () {\n  // mapState(xxx, 'xxx/route/xxx')\n  // mapState({ xxx, 'xxx/route/xxx', xxx, 'xxx/route/xxx' })\n  let opt = utils.getArgMerge.apply(null, arguments)\n  const computed = {}\n  Object.keys(opt).forEach(k => {\n    const path = opt[k]\n    computed[k] = {\n      get () {\n        return this.$vuet.store[path]\n      },\n      set (val) {\n        this.$vuet.store[path] = val\n      }\n    }\n  })\n  return computed\n}\n","import { plugins } from './vuet'\n\nexport default function mapMixins (...paths) {\n  // mapMixins('xxx/route/xxx')\n  // mapMixins(['xxx/route/xxx', 'xxx/route/xxx'])\n  const mixins = []\n  paths.forEach(path => {\n    const pluginName = path.split('/')[1]\n    const plugin = plugins[pluginName]\n    mixins.push(plugin.mixin(path))\n  })\n  return mixins\n}\n","const name = 'life'\n\nexport default {\n  name,\n  mixin (path) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","const name = 'local'\n\nexport default {\n  name,\n  mixin (path) {\n    return {}\n  }\n}\n","const name = 'need'\n\nexport default {\n  name,\n  mixin (path) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","const name = 'once'\n\nexport default {\n  name,\n  mixin (path) {\n    return {\n      beforeCreate () {\n        if (this.$vuet.__fired_once__ === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet.__fired_once__ = true\n          })\n        }\n      }\n    }\n  },\n  install (Vue, Vuet) {},\n  init (vuet) {\n    vuet.__fired_once__ = false\n  },\n  destroy (vuet) {\n    vuet.__fired_once__ = true\n  }\n}\n","const name = 'route'\n\nexport default {\n  name,\n  mixin (path) {\n    function set (obj, key, value) {\n      Object.defineProperty(obj, key, {\n        value,\n        enumerable: false,\n        writable: true,\n        configurable: false\n      })\n    }\n    function getOpt () {\n      return this.$vuet._options.modules[path]\n    }\n\n    function getWatchs (obj, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n    return {\n      beforeCreate () {\n        if (!this.$vuet.__route__) {\n          set(this.$vuet, '__route__', {})\n        }\n        const { watch = 'fullPath' } = getOpt.call(this)\n        const toWatch = getWatchs(this.$route, watch)\n        if (!this.$vuet.__route__[path]) {\n          this.$vuet.__route__[path] = toWatch\n        }\n        if (diffWatch(toWatch, this.$vuet.__route__[path])) {\n          this.$vuet.reset(path)\n          this.$vuet.__route__[path] = toWatch\n        }\n        this.$vuet.fetch(path, { current: this }).then(() => {\n          this.$vuet.__route__[path] = toWatch\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { watch = 'fullPath' } = getOpt.call(this)\n            const toWatch = getWatchs(to, watch)\n            const fromWatch = getWatchs(from, watch)\n            if (!diffWatch(toWatch, fromWatch)) return false\n            this.$vuet.fetch(path, this).then(() => {\n              this.$vuet.__route__[path] = toWatch\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","const utils = {\n  isObject (obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  },\n  isFunction (fn) {\n    return Object.prototype.toString.call(fn) === '[object Function]'\n  },\n  forEachObj (obj, cb) {\n    if (!utils.isObject(obj)) return\n    Object.keys(obj).forEach(k => {\n      cb(obj[k], k)\n    })\n  },\n  getArgMerge () {\n    let opt = {}\n    if (typeof arguments[0] === 'string') {\n      opt[arguments[0]] = arguments[1]\n    } else if (utils.isObject(arguments[0])) {\n      opt = arguments[0]\n    }\n    return opt\n  }\n}\nexport default utils\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","import { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nexport const plugins = {}\n\nconst pluginCallHook = (vuet, hook) => {\n  for (let k in plugins) {\n    if (utils.isFunction(plugins[k][hook])) {\n      plugins[k][hook](vuet)\n    }\n  }\n}\n\nexport default class Vuet {\n  constructor (options) {\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n  }\n  init (app) {\n    if (this.app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: this.options.data || function data () { return {} },\n      modules: {}\n    }\n    utils.forEachObj(this.options.modules, (myModule, myModuleName) => {\n      utils.forEachObj(myModule, (plugin, pluginName) => {\n        utils.forEachObj(plugin, (store, storeName) => {\n          const path = `${myModuleName}/${pluginName}/${storeName}`\n          this._options.modules[path] = this.options.modules[myModuleName][pluginName][storeName]\n          this.reset(path)\n        })\n      })\n    })\n    pluginCallHook(this, 'init')\n  }\n  setState (path, data) {\n    if (!this.store[path]) {\n      return _Vue.set(this.store, path, data)\n    }\n    Object.assign(this.store[path], data)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  reset (path) {\n    const data = this.options.data()\n    const store = this._options.modules[path]\n    if (utils.isFunction(store.data)) {\n      Object.assign(data, store.data.call(this, path))\n    }\n    this.setState(path, data)\n  }\n  fetch (path, params) {\n    const store = this._options.modules[path]\n    if (!utils.isFunction(store.fetch)) return false\n    const data = {\n      path,\n      params,\n      store: this.getState(path)\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].call(this, ...arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.store)\n    return store.fetch.call(this)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.store\n      this.setState(path, res)\n      return data.store\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.store)\n      return Promise.reject(e)\n    })\n  }\n  destroy () {\n    this.vm.$destroy()\n    pluginCallHook(this, 'destroy')\n  }\n}\n\nVuet.use = function use (plugin, opt) {\n  if (utils.isFunction(plugin.install)) {\n    plugin.install(_Vue, Vuet, opt)\n  }\n  if (typeof plugin.name !== 'string' && !plugin.name) return this\n  plugins[plugin.name] = plugin\n  return this\n}\n","import Vuet from './vuet'\nimport install from './install'\nexport { default as mapState } from './mapState'\nexport { default as mapMixins } from './mapMixins'\nVuet.install = install\n\nexport default Vuet\n"],"names":["install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","isDef","$options","vuet","init","destroy","keys","plugins","forEach","use","k","mapState","opt","utils","getArgMerge","apply","arguments","computed","path","$vuet","store","val","mapMixins","mixins","paths","pluginName","split","plugin","push","fetch","current","reset","__fired_once__","then","Vuet","set","obj","key","value","getOpt","_options","modules","getWatchs","list","getObjVal","str","arr","isNaN","String","JSON","stringify","diffWatch","to","from","i","length","__route__","call","watch","toWatch","$route","fromWatch","_Vue","undefined","v","Object","toString","fn","cb","isObject","msg","Error","pluginCallHook","hook","isFunction","options","error","app","beforeHooks","afterHooks","vm","data","forEachObj","myModule","myModuleName","storeName","_this","assign","setState","params","getState","callHook","arg","_this2","Promise","resolve","res","catch","e","reject","$destroy","name"],"mappings":"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"}