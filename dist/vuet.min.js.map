{"version":3,"file":"vuet.min.js","sources":["../src/install.js","../src/rules/index.js","../src/vuet.js","../src/utils.js","../src/debug.js","../src/rules/life.js","../src/rules/manual.js","../src/rules/need.js","../src/rules/once.js","../src/rules/route.js","../src/index.js"],"sourcesContent":["import utils from './utils'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n}\n","import life from './life'\nimport manual from './manual'\nimport need from './need'\nimport once from './once'\nimport route from './route'\n\nexport default function install (_Vue, Vuet) {\n  Vuet\n    .rule('life', life)\n    .rule('manual', manual)\n    .rule('need', need)\n    .rule('once', once)\n    .rule('route', route)\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport rules from './rules/index'\n\nexport default class Vuet {\n  constructor (options) {\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: function data () { return {} },\n      pathJoin: '/',\n      ...this.options,\n      ...{\n        modules: {}\n      }\n    }\n    const { pathJoin } = this._options\n    const keys = ['data', 'fetch', 'routeWatch', 'manuals']\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          this._options.modules[_path.join(pathJoin)] = item\n          this.reset(_path.join(pathJoin))\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    callRuleHook('init', this)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  setState (path, newState) {\n    if (!this.store[path]) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const module = this._options.modules[path]\n    if (!utils.isFunction(module.fetch)) return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path)\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return module.fetch.call(this, data)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.state\n      if (setStateBtn === false) return res\n      this.setState(path, res)\n      return data.state\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n      return Promise.reject(e)\n    })\n  }\n  reset (path) {\n    const data = this._options.data.call(this)\n    const module = this._options.modules[path]\n    if (utils.isFunction(module.data)) {\n      Object.assign(data, module.data.call(this, path))\n    }\n    this.setState(path, data)\n    return this\n  }\n  destroy () {\n    this.vm.$destroy()\n    callRuleHook('destroy', this)\n  }\n}\n\nObject.assign(Vuet, {\n  options: {\n    rules: {}\n  },\n  install,\n  rule (name, rule) {\n    if (this.options.rules[name]) return this\n    this.options.rules[name] = rule\n    callRuleHook('install', _Vue, Vuet)\n    return this\n  },\n  mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueRules = []\n    const addRule = (ruleName, any) => {\n      const rules = Vuet.options.rules[ruleName]\n      if (typeof any === 'string') {\n        vueRules.push(rules.rule({ path: any }))\n      } else {\n        vueRules.push(rules.rule(any))\n      }\n    }\n    Object.keys(opt).forEach(ruleName => {\n      const any = opt[ruleName]\n      if (Array.isArray(any)) {\n        return any.forEach(item => {\n          addRule(ruleName, item)\n        })\n      }\n      addRule(ruleName, any)\n    })\n    return {\n      mixins: vueRules\n    }\n  },\n  mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return { computed }\n  },\n  use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n})\n\nfunction callRuleHook (hook, ...arg) {\n  const { rules } = Vuet.options\n  for (let k in rules) {\n    if (utils.isFunction(rules[k][hook])) {\n      rules[k][hook].apply(rules[k], arg)\n    }\n  }\n}\n\nVuet.use(rules)\n","const toString = Object.prototype.toString\n// Cached type string\nconst typeStrings = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\n// Add isXXX function\ntypeStrings.forEach(type => {\n  const typeString = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nexport default {\n  rule ({ path, name }) {\n    return {\n      beforeCreate () {\n        const { manuals } = this.$vuet._options.modules[path]\n        const methods = {}\n        Object.keys(manuals).forEach(k => {\n          const fn = manuals[k]\n          if (utils.isFunction(fn)) {\n            methods[`${k}`] = (...arg) => {\n              fn.apply(methods, [{\n                state: this.$vuet.getState(path),\n                vm: this,\n                vuet: this.$vuet\n              }, ...arg])\n            }\n          }\n        })\n        methods.reset = (...arg) => {\n          this.$vuet.reset(path, ...arg)\n          return methods\n        }\n        methods.fetch = (...arg) => {\n          this.$vuet.fetch(path, ...arg)\n          return methods\n        }\n        if (name) {\n          this[name] = methods\n        } else if (manuals.name) {\n          this[manuals.name] = methods\n        } else {\n          const arr = path.split(this.$vuet._options.pathJoin)\n          const name = `$${arr[arr.length - 1]}`\n          const $methods = this[name] = {}\n          Object.assign($methods, methods)\n        }\n      }\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'route'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, [])\n    })\n  },\n  rule ({ path }) {\n    function getWatchs (obj, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n    return {\n      beforeCreate () {\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        if (diffWatch(toWatch, this.$vuet[key][path])) {\n          this.$vuet.reset(path)\n          this.$vuet[key][path] = toWatch\n        }\n        this.$vuet.fetch(path, { current: this }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          this.$vuet[key][path] = toWatch\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            if (!diffWatch(toWatch, fromWatch)) return false\n            this.$vuet.fetch(path, { current: this }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              this.$vuet.setState(path, res)\n              this.$vuet[key][path] = toWatch\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","import Vuet from './vuet'\n\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","_Vue","Vuet","rule","life","manual","need","once","route","callRuleHook","hook","rules","options","arg","k","isFunction","apply","toString","Object","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","forEach","typeString","type","call","msg","Error","path","$vuet","fetch","current","reset","name","manuals","_options","modules","methods","keys","fn","_this","getState","arr","split","pathJoin","$methods","assign","set","store","then","getWatchs","list","getObjVal","str","val","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","routeWatch","toWatch","$route","res","setState","fromWatch","_this2","error","app","beforeHooks","afterHooks","vm","initModule","item","_path","data","join","indexOf","newState","params","setStateBtn","module","Promise","resolve","callHook","state","catch","e","reject","$destroy","paths","getArgMerge","vueRules","addRule","ruleName","any","Array","isArray","computed","plugin","use","mapRules","bind","mapModules"],"mappings":"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"}