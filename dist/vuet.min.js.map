{"version":3,"file":"vuet.min.js","sources":["../src/install.js","../src/mixins/index.js","../src/vuet.js","../src/utils.js","../src/debug.js","../src/mixins/life.js","../src/mixins/need.js","../src/mixins/once.js","../src/mixins/route.js","../src/index.js"],"sourcesContent":["import utils from './utils'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n}\n","import life from './life'\nimport need from './need'\nimport once from './once'\nimport route from './route'\n\nexport default function install (_Vue, Vuet) {\n  Vuet\n    .mixin('life', life)\n    .mixin('need', need)\n    .mixin('once', once)\n    .mixin('route', route)\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport mixins from './mixins/index'\n\nexport default class Vuet {\n  constructor (options) {\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: this.options.data || function data () { return {} },\n      pathJoin: this.options.pathJoin || '/',\n      modules: {}\n    }\n    const { pathJoin } = this._options\n    const keys = ['data', 'fetch', 'routeWatch']\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          this._options.modules[_path.join(pathJoin)] = item\n          this.reset(_path.join(pathJoin))\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    callMixinHook('init', this)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  setState (path, newState) {\n    if (!this.store[path]) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const module = this._options.modules[path]\n    if (!utils.isFunction(module.fetch)) return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path)\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return module.fetch.call(this, data)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.state\n      if (setStateBtn === false) return res\n      this.setState(path, res)\n      return data.state\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n      return Promise.reject(e)\n    })\n  }\n  reset (path) {\n    const data = this._options.data.call(this)\n    const module = this._options.modules[path]\n    if (utils.isFunction(module.data)) {\n      Object.assign(data, module.data.call(this, path))\n    }\n    this.setState(path, data)\n    return this\n  }\n  destroy () {\n    this.vm.$destroy()\n    callMixinHook('destroy', this)\n  }\n}\n\nObject.assign(Vuet, {\n  options: {\n    mixins: {}\n  },\n  install,\n  mixin (name, mixin) {\n    if (this.options.mixins[name]) return this\n    this.options.mixins[name] = mixin\n    callMixinHook('install', _Vue, Vuet)\n    return this\n  },\n  mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueMixins = []\n    Object.keys(opt).forEach(mixinName => {\n      const any = opt[mixinName]\n      if (Array.isArray(any)) {\n        return any.forEach(path => {\n          const mixins = Vuet.options.mixins[mixinName]\n          vueMixins.push(mixins.mixin(path))\n        })\n      }\n      const mixins = Vuet.options.mixins[mixinName]\n      vueMixins.push(mixins.mixin(any))\n    })\n    return vueMixins\n  },\n  mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return computed\n  },\n  use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n})\n\nfunction callMixinHook (hook, ...arg) {\n  const { mixins } = Vuet.options\n  for (let k in mixins) {\n    if (utils.isFunction(mixins[k][hook])) {\n      mixins[k][hook].apply(mixins[k], arg)\n    }\n  }\n}\n\nVuet.use(mixins)\n","const toString = Object.prototype.toString\n// Cached type string\nconst typeStrings = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\n// Add isXXX function\ntypeStrings.forEach(type => {\n  const typeString = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","export default {\n  mixin (path) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","export default {\n  mixin (path) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  mixin (path) {\n    return {\n      beforeCreate () {\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'route'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, [])\n    })\n  },\n  mixin (path) {\n    function getWatchs (obj, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n    return {\n      beforeCreate () {\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        if (diffWatch(toWatch, this.$vuet[key][path])) {\n          this.$vuet.reset(path)\n          this.$vuet[key][path] = toWatch\n        }\n        this.$vuet.fetch(path, { current: this }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          this.$vuet[key][path] = toWatch\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            if (!diffWatch(toWatch, fromWatch)) return false\n            this.$vuet.fetch(path, { current: this }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              this.$vuet.setState(path, res)\n              this.$vuet[key][path] = toWatch\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","import Vuet from './vuet'\n\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","_Vue","Vuet","life","need","once","route","callMixinHook","hook","mixins","options","arg","k","isFunction","apply","toString","Object","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","forEach","typeString","type","call","msg","Error","path","$vuet","fetch","current","reset","set","keys","store","then","getWatchs","list","getObjVal","str","split","arr","val","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","_options","modules","routeWatch","toWatch","$route","res","_this","setState","fromWatch","_this2","error","app","beforeHooks","afterHooks","vm","fn","data","pathJoin","initModule","item","_path","join","indexOf","newState","assign","params","setStateBtn","module","Promise","resolve","getState","callHook","state","catch","e","reject","$destroy","name","paths","getArgMerge","vueMixins","any","mixinName","Array","isArray","computed","plugin","use","mapRules","bind","mapModules"],"mappings":"8LAIA,SAAwBA,GAASC,GAC3BD,EAAQE,cACJA,WAAY,IACbD,SACAE,eAAeF,EAAIG,UAAW,8BACnBC,MAAKC,MAAMC,WAEzBC,+BAEKC,EAAMC,YAAYL,KAAKM,SAASC,aAC9BL,MAAQF,KAAKM,SAASC,UACtBL,MAAMM,MAAMR,6BAIdI,EAAMC,YAAYL,KAAKM,SAASC,aAC9BL,MAAQF,KAAKM,SAASC,UACtBL,MAAMO,QAAQT,WChBZ,QAASL,GAASe,EAAMC,KAElCR,MAAM,OAAQS,GACdT,MAAM,OAAQU,GACdV,MAAM,OAAQW,GACdX,MAAM,QAASY,GCyJpB,QAASC,GAAeC,UACdC,GAAWP,EAAKQ,QAAhBD,0BADuBE,uDAE1B,GAAIC,KAAKH,GACRd,EAAMkB,WAAWJ,EAAOG,GAAGJ,OACtBI,GAAGJ,GAAMM,MAAML,EAAOG,GAAID,GCvKvC,GAAMI,GAAWC,OAAO1B,UAAUyB,SAE5BE,GAAe,SAAU,WAAY,SAAU,YAAa,QAE5DtB,6BAEEuB,MACEC,EAAOC,gBACTzB,GAAM0B,SAASF,EAAK,MAClBA,EAAK,IAAMA,EAAKG,OAAS,EAAIH,EAAK,GAAKA,EAAK,GACvCA,EAAK,IAAMxB,EAAM4B,SAASJ,EAAK,QAClCA,EAAK,IAEND,gBAEJM,EAAKC,EAAKC,UACNrC,eAAemC,EAAKC,uBAEb,YACF,gBACI,KAMpBR,GAAYU,QAAQ,eACZC,cAAwBC,aACnBA,GAAU,kBACZd,GAASe,KAAKN,KAASI,IH3B3B,IAAI3B,GAAO,uBIDT8B,QACC,IAAIC,iBAAgBD,kBAEtBA,wBCHCE,uCAGIC,MAAMC,MAAMF,GAAQG,QAAS7C,kCAG7B2C,MAAMG,MAAMJ,GAAQG,QAAS7C,6BCNjC0C,uCAGIC,MAAMC,MAAMF,GAAQG,QAAS7C,WCDpCkC,8BAGE3B,KACEwC,IAAIxC,EAAM2B,aACTc,KAAKzC,EAAK0C,OAAOb,QAAQ,cACxBW,IAAIxC,EAAK2B,GAAMb,GAAG,qBAGrBqB,8CAG6B,IAA1B1C,KAAK2C,MAAMT,GAAKQ,SACbC,MAAMC,MAAMF,GAAQG,QAAS7C,OAAQkD,KAAK,aACxCP,MAAMT,GAAKQ,IAAQ,QCd9BR,+BAGE3B,KACEwC,IAAIxC,EAAM2B,aACTc,KAAKzC,EAAK0C,OAAOb,QAAQ,cACxBW,IAAIxC,EAAK2B,GAAMb,wBAGlBqB,WACIS,GAAWlB,EAAKmB,GACH,gBAATA,QACDA,OAEJC,GAAY,SAACpB,EAAKqB,SACVA,GAAIC,MAAM,KAClBnB,QAAQ,cACJH,EAAIZ,KAELY,GAEHuB,cACDpB,QAAQ,eACPD,GAAQkB,EAAUpB,EAAKwB,EACtBC,OAAMvB,OACDwB,OAAOxB,MAEbyB,KAAKC,KAAKC,UAAU3B,MAEnBqB,UAGAO,GAAWC,EAAIC,OACjB,GAAIC,GAAI,EAAGA,EAAIF,EAAGjC,OAAQmC,OACzBF,EAAGE,KAAOD,EAAKC,UACV,SAGJ,8CAI+BlE,KAAK2C,MAAMwB,SAASC,QAAQ1B,GAAxD2B,WAAAA,aAAa,aACfC,EAAUnB,EAAUnD,KAAKuE,OAAQF,EACnCN,GAAUO,EAAStE,KAAK2C,MAAMT,GAAKQ,WAChCC,MAAMG,MAAMJ,QACZC,MAAMT,GAAKQ,GAAQ4B,QAErB3B,MAAMC,MAAMF,GAAQG,QAAS7C,OAAQ,GAAOkD,KAAK,SAACsB,GACjDT,EAAUO,EAASnB,EAAUsB,EAAKF,OAAQF,QACzC1B,MAAM+B,SAAShC,EAAM8B,KACrB7B,MAAMT,GAAKQ,GAAQ4B,2BAKlB,mBACGN,EAAIC,gBACyBjE,KAAK2C,MAAMwB,SAASC,QAAQ1B,GAAxD2B,WAAAA,aAAa,aACfC,EAAUnB,EAAUa,EAAIK,GACxBM,EAAYxB,EAAUc,EAAMI,OAC7BN,EAAUO,EAASK,GAAY,OAAO,OACtChC,MAAMC,MAAMF,GAAQG,QAAS7C,OAAQkD,KAAK,SAACsB,GAC1CT,EAAUO,EAASnB,EAAUyB,EAAKL,OAAQF,QACzC1B,MAAM+B,SAAShC,EAAM8B,KACrB7B,MAAMT,GAAKQ,GAAQ4B,4nBN/DjB3D,wBACNQ,aACNf,EAAM4B,SAASb,MACZ0D,MAAM,qCAET1D,QAAUA,WACV2D,IAAM,UACN7B,cACA8B,oBACAC,mBACAC,GAAK,kDAEAC,eACLH,YAAYnB,KAAKsB,GACflF,uCAEEkF,eACJF,WAAWpB,KAAKsB,GACdlF,mCAEF8E,kBACD9E,KAAK8E,KAAQA,QACZA,IAAMA,OACNG,GAAK,GAAIvE,gBAEHV,KAAKiD,cAGXkB,eACGnE,KAAKmB,QAAQgE,MAAQ,8BACjBnF,KAAKmB,QAAQiE,UAAY,mBAG7BA,GAAapF,KAAKmE,SAAlBiB,SACFpC,GAAQ,OAAQ,QAAS,eACZ,QAAbqC,GAAc3C,EAAM0B,UACjBpB,KAAKoB,GAAShC,QAAQ,eACrBkD,GAAOlB,EAAQ/C,GACfkE,cAAY7C,IAAMrB,GACpBjB,GAAMkB,WAAWgE,EAAKH,UACnBhB,SAASC,QAAQmB,EAAMC,KAAKJ,IAAaE,IACzCxC,MAAMyC,EAAMC,KAAKJ,MAEC,IAArBpC,EAAKyC,QAAQpE,IAAajB,EAAM4B,SAASsD,MAChCC,EAAOD,SAITtF,KAAKmB,QAAQiD,WACd,OAAQpE,wCAEd0C,SACD1C,MAAKiD,MAAMP,wCAEVA,EAAMgD,SACT1F,MAAKiD,MAAMP,WAITiD,OAAO3F,KAAKiD,MAAMP,GAAOgD,GACzB1F,SAJA+C,IAAI/C,KAAKiD,MAAOP,EAAMgD,GACpB1F,oCAKJ0C,EAAMkD,EAAQC,cACbC,EAAS9F,KAAKmE,SAASC,QAAQ1B,OAChCtC,EAAMkB,WAAWwE,EAAOlD,OAAQ,MAAOmD,SAAQC,QAAQhG,KAAKiG,SAASvD,OACpEyC,uBAESS,SACN5F,KAAKiG,SAASvD,IAEjBwD,EAAW,SAACjF,8BAASG,uDACpB,GAAI8C,GAAI,EAAGA,EAAIU,EAAK3D,GAAMc,OAAQmC,OACjCU,EAAK3D,GAAMiD,GAAG3C,QAAYH,UACrB,UAIyB,IAAlC8E,EAAS,cAAef,GAAwBY,QAAQC,QAAQb,EAAKgB,OAClEL,EAAOlD,MAAML,KAAKvC,KAAMmF,GAC9BjC,KAAK,mBAC4C,IAA5CgD,EAAS,aAAc,KAAMf,EAAMX,GAAuBW,EAAKgB,OAC/C,IAAhBN,EAA8BrB,KAC7BE,SAAShC,EAAM8B,GACbW,EAAKgB,SAEbC,MAAM,mBACmC,IAApCF,EAAS,aAAcG,EAAGlB,GAAwBY,QAAQC,QAAQb,EAAKgB,OACpEJ,QAAQO,OAAOD,mCAGnB3D,MACCyC,GAAOnF,KAAKmE,SAASgB,KAAK5C,KAAKvC,MAC/B8F,EAAS9F,KAAKmE,SAASC,QAAQ1B,SACjCtC,GAAMkB,WAAWwE,EAAOX,cACnBQ,OAAOR,EAAMW,EAAOX,KAAK5C,KAAKvC,KAAM0C,SAExCgC,SAAShC,EAAMyC,GACbnF,4CAGFiF,GAAGsB,aACM,UAAWvG,sBAItB2F,OAAOhF,gDAKL6F,EAAMrG,SACPH,MAAKmB,QAAQD,OAAOsF,GAAcxG,WACjCmB,QAAQD,OAAOsF,GAAQrG,IACd,UAAWO,EAAMC,GACxBX,sDAEIyG,4CACL9E,GAAMvB,EAAMsG,YAAYnF,MAAM,KAAMM,WACpC8E,mBACC3D,KAAKrB,GAAKS,QAAQ,eACjBwE,GAAMjF,EAAIkF,MACZC,MAAMC,QAAQH,SACTA,GAAIxE,QAAQ,eACXlB,GAASP,EAAKQ,QAAQD,OAAO2F,KACzBjD,KAAK1C,EAAOf,MAAMuC,SAG1BxB,GAASP,EAAKQ,QAAQD,OAAO2F,KACzBjD,KAAK1C,EAAOf,MAAMyG,MAEvBD,4BAGDhF,GAAMvB,EAAMsG,YAAYnF,MAAM,KAAMM,WACpCmF,mBACChE,KAAKrB,GAAKS,QAAQ,eACjBM,GAAOf,EAAIN,KACRA,yBAEErB,MAAK2C,MAAMM,MAAMP,iBAErBe,QACEd,MAAMM,MAAMP,GAAQe,MAIxBuD,gBAEJC,EAAQtF,SACPvB,GAAMkB,WAAW2F,KACZvG,EAAMC,EAAMgB,GACVvB,EAAMkB,WAAW2F,EAAOtH,YAC1BA,QAAQe,EAAMC,EAAMgB,GAEtB3B,QAaXW,EAAKuG,IAAIhG,EO1KF,IAAMiG,GAAWxG,EAAKwG,SAASC,KAAKzG,GAC9B0G,EAAa1G,EAAK0G,WAAWD,KAAKzG"}