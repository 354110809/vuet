{"version":3,"file":"vuet.min.js","sources":["../src/rules/route/route-scroll.js","../src/install.js","../src/rules/index.js","../src/vuet.js","../src/utils.js","../src/rules/route/route.js","../src/debug.js","../src/rules/life.js","../src/rules/manual.js","../src/rules/need.js","../src/rules/once.js","../src/index.js"],"sourcesContent":["import { _key } from './route'\nimport utils from '../../utils'\nimport debug from '../../debug'\n\nfunction initScroll (el, vnode, { path, name }) {\n  const { context } = vnode\n  let scrollPath = context.$vuet[_key].scrolls[path]\n  if (!name || !context) return\n  if (!scrollPath[name]) {\n    scrollPath[name] = { scrollTop: 0, scrollLeft: 0 }\n  }\n  const scrolls = scrollPath[name]\n  setTimeout(() => {\n    scrollTo(el, scrolls)\n  }, 0)\n  return scrolls\n}\n\nfunction updateScroll (scrolls, event) {\n  const { scrollTop, scrollLeft, pageXOffset, pageYOffset } = event.target\n  scrolls.scrollLeft = scrollLeft || pageYOffset || scrollLeft\n  scrolls.scrollTop = scrollTop || pageXOffset || scrollTop\n}\n\nfunction updateWindowScroll (scrolls, event) {\n  scrolls.scrollLeft = window.pageXOffset\n  scrolls.scrollTop = window.pageYOffset\n}\n\nexport function scrollTo (el, scrolls) {\n  if ('scrollTop' in el && el !== window) {\n    Object.assign(el, scrolls)\n  } else {\n    el.scrollTo(scrolls.scrollLeft, scrolls.scrollTop)\n  }\n}\n\nexport default {\n  inserted (el, { modifiers, value }, vnode) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!utils.isObject(value)) {\n        return debug.error('Parameter is the object type')\n      }\n      if (!utils.isString(value.path)) {\n        return debug.error('Ptah is imperative parameter')\n      }\n    }\n    if (modifiers.window !== true || modifiers.self) {\n      if (value.name === '__window__') {\n        return debug.error('name not __window__')\n      }\n      if (!value.name) {\n        return debug.error('Name is imperative parameter')\n      }\n      const areaScrolls = initScroll(el, vnode, value)\n      el.__vuetRouteScroll__ = event => {\n        updateScroll(areaScrolls, event)\n      }\n      el.addEventListener('scroll', el.__vuetRouteScroll__, false)\n    }\n    if (modifiers.window) {\n      const windowScrolls = initScroll(window, vnode, Object.assign({}, value, { name: '__window__' }))\n      el.__vuetRouteScrollWindow__ = event => {\n        updateWindowScroll(windowScrolls, event)\n      }\n      window.addEventListener('scroll', el.__vuetRouteScrollWindow__, false)\n    }\n  },\n  unbind (el) {\n    if (typeof el.__vuetRouteScroll__ === 'function') {\n      el.removeEventListener('scroll', el.__vuetRouteScroll__, false)\n      delete el.__vuetRouteScroll__\n    }\n    if (typeof el.__vuetRouteScrollWindow__ === 'function') {\n      window.removeEventListener('scroll', el.__vuetRouteScrollWindow__, false)\n      delete el.__vuetRouteScrollWindow__\n    }\n  }\n}\n","import utils from './utils'\nimport routeScroll from './rules/route/route-scroll'\n\nexport let _Vue = null\n\nexport default function install (Vue) {\n  if (install.installed) return\n  install.installed = true\n  _Vue = Vue\n  Object.defineProperty(Vue.prototype, '$vuet', {\n    get () { return this.$root._vuet }\n  })\n  Vue.mixin({\n    beforeCreate () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet._init(this)\n      }\n    },\n    destroyed () {\n      if (!utils.isUndefined(this.$options.vuet)) {\n        this._vuet = this.$options.vuet\n        this._vuet.destroy(this)\n      }\n    }\n  })\n\n  Vue.directive('route-scroll', routeScroll)\n}\n","import life from './life'\nimport manual from './manual'\nimport need from './need'\nimport once from './once'\nimport route from './route/index'\n\nexport default function install (_Vue, Vuet) {\n  Vuet\n    .rule('life', life)\n    .rule('manual', manual)\n    .rule('need', need)\n    .rule('once', once)\n    .rule('route', route)\n}\n","import install, { _Vue } from './install'\nimport utils from './utils'\nimport debug from './debug'\nimport rules from './rules/index'\n\nexport default class Vuet {\n  constructor (options) {\n    if (!utils.isObject(options)) {\n      debug.error('Parameter is the object type')\n    }\n    this.options = options || {}\n    this.app = null\n    this.store = {}\n    this.beforeHooks = [] // Before the request begins\n    this.afterHooks = [] // After the request begins\n    this.vm = null\n  }\n  beforeEach (fn) {\n    this.beforeHooks.push(fn)\n    return this\n  }\n  afterEach (fn) {\n    this.afterHooks.push(fn)\n    return this\n  }\n  _init (app) {\n    if (this.app || !app) return\n    this.app = app\n    this.vm = new _Vue({\n      data: {\n        store: this.store\n      }\n    })\n    this._options = {\n      data: function data () { return {} },\n      pathJoin: null,\n      ...this.options,\n      ...{\n        modules: {}\n      }\n    }\n    const keys = ['data', 'fetch', 'routeWatch', 'manuals']\n    const { pathJoin } = this._options\n    const initModule = (path, modules) => {\n      Object.keys(modules).forEach(k => {\n        const item = modules[k]\n        const _path = [...path, k]\n        if (utils.isFunction(item.data)) {\n          let newPath = null\n          if (pathJoin) {\n            newPath = _path.join(pathJoin)\n          } else {\n            newPath = [_path[0]]\n            for (let i = 1; i < _path.length; i++) {\n              newPath.push(_path[i].replace(/^(\\w)/, (v) => v.toUpperCase()))\n            }\n            newPath = newPath.join('')\n          }\n          this._options.modules[newPath] = item\n          this.reset(newPath)\n        }\n        if (keys.indexOf(k) === -1 && utils.isObject(item)) {\n          initModule(_path, item)\n        }\n      })\n    }\n    initModule([], this.options.modules)\n    callRuleHook('init', this)\n  }\n  getState (path) {\n    return this.store[path] || {}\n  }\n  setState (path, newState) {\n    if (!this.store[path]) {\n      _Vue.set(this.store, path, newState)\n      return this\n    }\n    Object.assign(this.store[path], newState)\n    return this\n  }\n  fetch (path, params, setStateBtn) {\n    const module = this._options.modules[path]\n    if (!utils.isFunction(module.fetch)) return Promise.resolve(this.getState(path))\n    const data = {\n      path,\n      params: { ...params },\n      state: this.getState(path),\n      route: this.app.$route || {}\n    }\n    const callHook = (hook, ...arg) => {\n      for (let i = 0; i < this[hook].length; i++) {\n        if (this[hook][i].apply(this, arg)) {\n          return false\n        }\n      }\n    }\n    if (callHook('beforeHooks', data) === false) return Promise.resolve(data.state)\n    return module.fetch.call(this, data)\n    .then(res => {\n      if (callHook('afterHooks', null, data, res) === false) return data.state\n      if (setStateBtn === false) return res\n      this.setState(path, res)\n      return data.state\n    })\n    .catch(e => {\n      if (callHook('afterHooks', e, data) === false) return Promise.resolve(data.state)\n      return Promise.reject(e)\n    })\n  }\n  reset (path) {\n    const data = this._options.data.call(this)\n    const module = this._options.modules[path]\n    if (utils.isFunction(module.data)) {\n      Object.assign(data, module.data.call(this, path))\n    }\n    this.setState(path, data)\n    return this\n  }\n  destroy () {\n    this.vm.$destroy()\n    callRuleHook('destroy', this)\n  }\n}\n\nObject.assign(Vuet, {\n  options: {\n    rules: {}\n  },\n  install,\n  rule (name, rule) {\n    if (this.options.rules[name]) return this\n    this.options.rules[name] = rule\n    callRuleHook('install', _Vue, Vuet)\n    return this\n  },\n  mapRules (...paths) {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const vueRules = []\n    const addRule = (ruleName, any) => {\n      const rules = Vuet.options.rules[ruleName]\n      if (typeof any === 'string') {\n        vueRules.push(rules.rule({ path: any }))\n      } else {\n        vueRules.push(rules.rule(any))\n      }\n    }\n    Object.keys(opt).forEach(ruleName => {\n      const any = opt[ruleName]\n      if (Array.isArray(any)) {\n        return any.forEach(item => {\n          addRule(ruleName, item)\n        })\n      }\n      addRule(ruleName, any)\n    })\n    return {\n      mixins: vueRules\n    }\n  },\n  mapModules () {\n    const opt = utils.getArgMerge.apply(null, arguments)\n    const computed = {}\n    Object.keys(opt).forEach(k => {\n      const path = opt[k]\n      computed[k] = {\n        get () {\n          return this.$vuet.store[path]\n        },\n        set (val) {\n          this.$vuet.store[path] = val\n        }\n      }\n    })\n    return { computed }\n  },\n  use (plugin, opt) {\n    if (utils.isFunction(plugin)) {\n      plugin(_Vue, Vuet, opt)\n    } else if (utils.isFunction(plugin.install)) {\n      plugin.install(_Vue, Vuet, opt)\n    }\n    return this\n  }\n})\n\nfunction callRuleHook (hook, ...arg) {\n  const { rules } = Vuet.options\n  for (let k in rules) {\n    if (utils.isFunction(rules[k][hook])) {\n      rules[k][hook].apply(rules[k], arg)\n    }\n  }\n}\n\nVuet.use(rules)\n","const toString = Object.prototype.toString\n// Cached type string\nconst typeStrings = ['Object', 'Function', 'String', 'Undefined', 'Null']\n\nconst utils = {\n  getArgMerge () {\n    let opt = {}\n    const args = arguments\n    if (utils.isString(args[0])) {\n      opt[args[0]] = args.length > 1 ? args[1] : args[0]\n    } else if (args[0] && utils.isObject(args[0])) {\n      opt = args[0]\n    }\n    return opt\n  },\n  set (obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value,\n      enumerable: false,\n      writable: true,\n      configurable: false\n    })\n  }\n}\n\n// Add isXXX function\ntypeStrings.forEach(type => {\n  const typeString = `[object ${type}]`\n  utils[`is${type}`] = obj => {\n    return toString.call(obj) === typeString\n  }\n})\n\nexport default utils\n","import utils from '../../utils'\nimport { scrollTo } from './route-scroll'\n\nexport const _name = 'route'\nexport const _key = `__${_name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, _key, {\n      watchers: {},\n      scrolls: {}\n    })\n    Object.keys(vuet.store).forEach(path => {\n      utils.set(vuet[_key].watchers, path, [])\n      utils.set(vuet[_key].scrolls, path, {})\n    })\n  },\n  rule ({ path }) {\n    // route-scroll\n    function resetVuetScroll (vuet) {\n      Object.keys(vuet[_key].scrolls[path]).forEach(k => {\n        const scrolls = { scrollTop: 0, scrollLeft: 0 }\n        vuet[_key].scrolls[path][k] = scrolls\n        const el = (k === '__window__') ? window : document.getElementById(k)\n        if (el) {\n          scrollTo(el, scrolls)\n        }\n      })\n    }\n\n    // route-watch\n    function getVuetWatchs (vuet) {\n      return vuet[_key].watchers[path]\n    }\n    function setVuetWatchs (vuet, val) {\n      vuet[_key].watchers[path] = val\n    }\n    function getWatchs (obj, list) {\n      if (typeof list === 'string') {\n        list = [list]\n      }\n      const getObjVal = (obj, str) => {\n        const arr = str.split('.')\n        arr.forEach(k => {\n          obj = obj[k]\n        })\n        return obj\n      }\n      const arr = []\n      list.forEach(val => {\n        let value = getObjVal(obj, val)\n        if (!isNaN(value)) {\n          value = String(value)\n        }\n        arr.push(JSON.stringify(value))\n      })\n      return arr\n    }\n\n    function diffWatch (to, from) {\n      for (let i = 0; i < to.length; i++) {\n        if (to[i] !== from[i]) {\n          return true\n        }\n      }\n      return false\n    }\n\n    return {\n      beforeCreate () {\n        const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n        const toWatch = getWatchs(this.$route, routeWatch)\n        if (diffWatch(toWatch, getVuetWatchs(this.$vuet))) {\n          this.$vuet.reset(path)\n          setVuetWatchs(this.$vuet, toWatch)\n          resetVuetScroll(this.$vuet)\n        }\n        this.$vuet.fetch(path, { current: this }, false).then((res) => {\n          if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n          this.$vuet.setState(path, res)\n          setVuetWatchs(this.$vuet, toWatch)\n        })\n      },\n      watch: {\n        $route: {\n          deep: true,\n          handler (to, from) {\n            const { routeWatch = 'fullPath' } = this.$vuet._options.modules[path]\n            const toWatch = getWatchs(to, routeWatch)\n            const fromWatch = getWatchs(from, routeWatch)\n            if (!diffWatch(toWatch, fromWatch)) return false\n            this.$vuet.fetch(path, { current: this }).then((res) => {\n              if (diffWatch(toWatch, getWatchs(this.$route, routeWatch))) return\n              resetVuetScroll(this.$vuet)\n              this.$vuet.setState(path, res)\n              setVuetWatchs(this.$vuet, toWatch)\n            })\n          }\n        }\n      }\n    }\n  }\n}\n","export default {\n  error (msg) {\n    throw new Error(`[vuet] ${msg}`)\n  },\n  warn (msg) {\n    if (process.env.NODE_ENV !== 'production') {\n      typeof console !== 'undefined' && console.warn(`[vuet] ${msg}`)\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      },\n      destroyed () {\n        this.$vuet.reset(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nexport default {\n  rule ({ path, name }) {\n    return {\n      beforeCreate () {\n        const { manuals } = this.$vuet._options.modules[path]\n        const methods = {}\n        Object.keys(manuals).forEach(k => {\n          const fn = manuals[k]\n          if (utils.isFunction(fn)) {\n            methods[`${k}`] = (...arg) => {\n              fn.apply(methods, [{\n                state: this.$vuet.getState(path),\n                vm: this,\n                vuet: this.$vuet\n              }, ...arg])\n            }\n          }\n        })\n        methods.reset = (...arg) => {\n          this.$vuet.reset(path, ...arg)\n          return methods\n        }\n        methods.fetch = (...arg) => {\n          this.$vuet.fetch(path, ...arg)\n          return methods\n        }\n        if (name) {\n          this[name] = methods\n        } else if (manuals.name) {\n          this[manuals.name] = methods\n        } else {\n          const arr = path.split(this.$vuet._options.pathJoin)\n          const name = `$${arr[arr.length - 1]}`\n          const $methods = this[name] = {}\n          Object.assign($methods, methods)\n        }\n      }\n    }\n  }\n}\n","export default {\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        this.$vuet.fetch(path, { current: this })\n      }\n    }\n  }\n}\n","import utils from '../utils'\n\nconst name = 'once'\nconst key = `__${name}__`\n\nexport default {\n  init (vuet) {\n    utils.set(vuet, key, {})\n    Object.keys(vuet.store).forEach(k => {\n      utils.set(vuet[key], k, false)\n    })\n  },\n  rule ({ path }) {\n    return {\n      beforeCreate () {\n        if (this.$vuet[key][path] === false) {\n          this.$vuet.fetch(path, { current: this }).then(() => {\n            this.$vuet[key][path] = true\n          })\n        }\n      }\n    }\n  }\n}\n","import Vuet from './vuet'\n\nexport const mapRules = Vuet.mapRules.bind(Vuet)\nexport const mapModules = Vuet.mapModules.bind(Vuet)\n\nexport default Vuet\n"],"names":["initScroll","el","vnode","path","name","context","scrollPath","$vuet","_key","scrolls","scrollTop","scrollLeft","updateScroll","event","target","pageXOffset","pageYOffset","updateWindowScroll","window","scrollTo","assign","install","Vue","installed","defineProperty","prototype","this","$root","_vuet","mixin","utils","isUndefined","$options","vuet","_init","destroy","directive","routeScroll","_Vue","Vuet","rule","life","manual","need","once","route","callRuleHook","hook","rules","options","arg","k","isFunction","apply","toString","Object","typeStrings","opt","args","arguments","isString","length","isObject","obj","key","value","forEach","typeString","type","call","set","keys","store","watchers","resetVuetScroll","document","getElementById","getVuetWatchs","setVuetWatchs","val","getWatchs","list","getObjVal","str","split","arr","isNaN","String","push","JSON","stringify","diffWatch","to","from","i","_options","modules","routeWatch","toWatch","$route","reset","fetch","current","then","res","_this","setState","fromWatch","_this2","msg","Error","modifiers","self","debug","error","areaScrolls","__vuetRouteScroll__","addEventListener","windowScrolls","__vuetRouteScrollWindow__","removeEventListener","manuals","methods","fn","getState","pathJoin","$methods","app","beforeHooks","afterHooks","vm","initModule","item","_path","data","newPath","join","replace","v","toUpperCase","indexOf","newState","params","setStateBtn","module","Promise","resolve","callHook","state","catch","e","reject","$destroy","paths","getArgMerge","vueRules","addRule","ruleName","any","Array","isArray","computed","plugin","use","mapRules","bind","mapModules"],"mappings":"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"}